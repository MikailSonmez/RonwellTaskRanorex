///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace RonwellTask.TestScenarios
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CASE1 recording.
    /// </summary>
    [TestModule("5fd72bab-f70e-4306-94f4-435423c95f71", ModuleType.Recording, 1)]
    public partial class CASE1 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::RonwellTask.RonwellTaskRepository repository.
        /// </summary>
        public static global::RonwellTask.RonwellTaskRepository repo = global::RonwellTask.RonwellTaskRepository.Instance;

        static CASE1 instance = new CASE1();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CASE1()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CASE1 Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.AccountUserLink'.", repo.ApplicationUnderTest.AccountUserLinkInfo, new RecordItemIndex(0));
            Validate.Exists(repo.ApplicationUnderTest.AccountUserLinkInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Touch", "Touch item 'ApplicationUnderTest.AccountUserLink' at Center", repo.ApplicationUnderTest.AccountUserLinkInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.AccountUserLink.Touch();
            Delay.Milliseconds(300);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.UEyeOl'.", repo.ApplicationUnderTest.UEyeOlInfo, new RecordItemIndex(2));
            Validate.Exists(repo.ApplicationUnderTest.UEyeOlInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.UEyeOl' at Center.", repo.ApplicationUnderTest.UEyeOlInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.UEyeOl.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'HttpsWwwTrendyolComUyelikcbEqhttps.Back1' at 21;13.", repo.HttpsWwwTrendyolComUyelikcbEqhttps.Back1Info, new RecordItemIndex(4));
            repo.HttpsWwwTrendyolComUyelikcbEqhttps.Back1.Click("21;13");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'ApplicationUnderTest.LoginRegister.LrTitle'.", repo.ApplicationUnderTest.LoginRegister.LrTitleInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.ApplicationUnderTest.LoginRegister.LrTitleInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Valid='True') on item 'ApplicationUnderTest.LoginRegister.LrTitle'.", repo.ApplicationUnderTest.LoginRegister.LrTitleInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.ApplicationUnderTest.LoginRegister.LrTitleInfo, "Valid", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'ApplicationUnderTest.LoginRegister.LrTitle'.", repo.ApplicationUnderTest.LoginRegister.LrTitleInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.ApplicationUnderTest.LoginRegister.LrTitleInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'ApplicationUnderTest.LoginRegister.ButtonQButtonQButtonMediumQSecond'.", repo.ApplicationUnderTest.LoginRegister.ButtonQButtonQButtonMediumQSecondInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.ApplicationUnderTest.LoginRegister.ButtonQButtonQButtonMediumQSecondInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Valid='True') on item 'ApplicationUnderTest.LoginRegister.ButtonQButtonQButtonMediumQSecond'.", repo.ApplicationUnderTest.LoginRegister.ButtonQButtonQButtonMediumQSecondInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.ApplicationUnderTest.LoginRegister.ButtonQButtonQButtonMediumQSecondInfo, "Valid", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'ApplicationUnderTest.LoginRegister.ButtonQButtonQButtonMediumQSecond'.", repo.ApplicationUnderTest.LoginRegister.ButtonQButtonQButtonMediumQSecondInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.ApplicationUnderTest.LoginRegister.ButtonQButtonQButtonMediumQSecondInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'ApplicationUnderTest.LoginRegister.LrContainer'.", repo.ApplicationUnderTest.LoginRegister.LrContainerInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.ApplicationUnderTest.LoginRegister.LrContainerInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Valid='True') on item 'ApplicationUnderTest.LoginRegister.LrContainer'.", repo.ApplicationUnderTest.LoginRegister.LrContainerInfo, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.ApplicationUnderTest.LoginRegister.LrContainerInfo, "Valid", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'ApplicationUnderTest.LoginRegister.LrContainer'.", repo.ApplicationUnderTest.LoginRegister.LrContainerInfo, new RecordItemIndex(13));
            Validate.AttributeEqual(repo.ApplicationUnderTest.LoginRegister.LrContainerInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'ApplicationUnderTest.LoginEmail'.", repo.ApplicationUnderTest.LoginEmailInfo, new RecordItemIndex(14));
            Validate.AttributeEqual(repo.ApplicationUnderTest.LoginEmailInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Valid='True') on item 'ApplicationUnderTest.LoginEmail'.", repo.ApplicationUnderTest.LoginEmailInfo, new RecordItemIndex(15));
            Validate.AttributeEqual(repo.ApplicationUnderTest.LoginEmailInfo, "Valid", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'ApplicationUnderTest.LoginEmail'.", repo.ApplicationUnderTest.LoginEmailInfo, new RecordItemIndex(16));
            Validate.AttributeEqual(repo.ApplicationUnderTest.LoginEmailInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Value='') on item 'ApplicationUnderTest.LoginEmail'.", repo.ApplicationUnderTest.LoginEmailInfo, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.ApplicationUnderTest.LoginEmailInfo, "Value", "");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'ApplicationUnderTest.LoginPasswordInput'.", repo.ApplicationUnderTest.LoginPasswordInputInfo, new RecordItemIndex(18));
            Validate.AttributeEqual(repo.ApplicationUnderTest.LoginPasswordInputInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Valid='True') on item 'ApplicationUnderTest.LoginPasswordInput'.", repo.ApplicationUnderTest.LoginPasswordInputInfo, new RecordItemIndex(19));
            Validate.AttributeEqual(repo.ApplicationUnderTest.LoginPasswordInputInfo, "Valid", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'ApplicationUnderTest.LoginPasswordInput'.", repo.ApplicationUnderTest.LoginPasswordInputInfo, new RecordItemIndex(20));
            Validate.AttributeEqual(repo.ApplicationUnderTest.LoginPasswordInputInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Value='') on item 'ApplicationUnderTest.LoginPasswordInput'.", repo.ApplicationUnderTest.LoginPasswordInputInfo, new RecordItemIndex(21));
            Validate.AttributeEqual(repo.ApplicationUnderTest.LoginPasswordInputInfo, "Value", "");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'ApplicationUnderTest.LoginRegister.QButtonQButtonMediumQFluidQPrima'.", repo.ApplicationUnderTest.LoginRegister.QButtonQButtonMediumQFluidQPrimaInfo, new RecordItemIndex(22));
            Validate.AttributeEqual(repo.ApplicationUnderTest.LoginRegister.QButtonQButtonMediumQFluidQPrimaInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Valid='True') on item 'ApplicationUnderTest.LoginRegister.QButtonQButtonMediumQFluidQPrima'.", repo.ApplicationUnderTest.LoginRegister.QButtonQButtonMediumQFluidQPrimaInfo, new RecordItemIndex(23));
            Validate.AttributeEqual(repo.ApplicationUnderTest.LoginRegister.QButtonQButtonMediumQFluidQPrimaInfo, "Valid", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'ApplicationUnderTest.LoginRegister.QButtonQButtonMediumQFluidQPrima'.", repo.ApplicationUnderTest.LoginRegister.QButtonQButtonMediumQFluidQPrimaInfo, new RecordItemIndex(24));
            Validate.AttributeEqual(repo.ApplicationUnderTest.LoginRegister.QButtonQButtonMediumQFluidQPrimaInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Enabled='True') on item 'ApplicationUnderTest.LoginRegister.SocialAccountLoginButtons'.", repo.ApplicationUnderTest.LoginRegister.SocialAccountLoginButtonsInfo, new RecordItemIndex(25));
            Validate.AttributeEqual(repo.ApplicationUnderTest.LoginRegister.SocialAccountLoginButtonsInfo, "Enabled", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Valid='True') on item 'ApplicationUnderTest.LoginRegister.SocialAccountLoginButtons'.", repo.ApplicationUnderTest.LoginRegister.SocialAccountLoginButtonsInfo, new RecordItemIndex(26));
            Validate.AttributeEqual(repo.ApplicationUnderTest.LoginRegister.SocialAccountLoginButtonsInfo, "Valid", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'ApplicationUnderTest.LoginRegister.SocialAccountLoginButtons'.", repo.ApplicationUnderTest.LoginRegister.SocialAccountLoginButtonsInfo, new RecordItemIndex(27));
            Validate.AttributeEqual(repo.ApplicationUnderTest.LoginRegister.SocialAccountLoginButtonsInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
